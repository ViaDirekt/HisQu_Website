---
// Importiere Astro-Komponenten für Icons und Bilder
import Image from 'astro/components/Image.astro';
import { Calendar, Clock, ArrowRight, Bookmark } from 'lucide-astro';
import TEMPTODO from "../../assets/KickOff_03_2025.jpg"
// Annahme: ImageWithFallback ist eine .astro-Komponente

// Alle Daten und Logik hier im Frontmatter
const blogPosts = [
  {
    title: "Fakten vernetzen mit FactGrid",
    excerpt: "Ein Projekt zur modellhaften Erfassung historischer Daten in einer offenen Wissensdatenbank.",
    date: "2024-01-15",
    readTime: "8 min",
    category: "FactGrid",
    image: "/api/placeholder/600/400",
    featured: true
  },
  {
    title: "Annotation historischer Regesten",
    excerpt: "Die manuelle Annotation von Regesten dient als Grundlage für das Validieren und Entwickeln automatischer Extraktionsverfahren.",
    date: "2024-01-10",
    readTime: "12 min",
    category: "Methodology",
    image: "/api/placeholder/600/401",
    featured: false
  },
  {
    title: "Large Language Models in der Geschichtswissenschaft",
    excerpt: "Wie KI-Technologien die historische Forschung revolutionieren und neue Möglichkeiten der Quellenerschließung eröffnen.",
    date: "2024-01-05",
    readTime: "15 min",
    category: "AI & ML",
    image: "/api/placeholder/600/402",
    featured: false
  },
  {
    title: "SPARQL-Abfragen für Historiker:innen",
    excerpt: "Ein praktischer Leitfaden für den Einstieg in semantische Datenbankabfragen für geschichtswissenschaftliche Forschung.",
    date: "2023-12-20",
    readTime: "10 min",
    category: "Tutorial",
    image: "/api/placeholder/600/403",
    featured: false
  }
];

// Dynamisch Kategorien erstellen, um DRY zu bleiben
const allCategories = ["Alle", ...new Set(blogPosts.map(post => post.category))];
const categories = allCategories.map((cat, index) => ({
  name: cat,
  count: cat === "Alle" ? blogPosts.length : blogPosts.filter(p => p.category === cat).length,
  active: index === 0 // "Alle" ist standardmäßig aktiv
}));


// Datumsformatierungs-Hilfsfunktion
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('de-DE', {
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });
};

// Posts aufteilen (Beachten Sie, dass dies für das *initiale* Layout ist)
const [mainPost, post2, post3, post4] = blogPosts;
const otherPosts = [post2, post3, post4];
---

<section class="fullscreen-section blog-section scrollbar-hide" id="blog-section">
 <div class="blog-container flex justify-center px-6 py-12 flex-col">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-16">
        <div
          id="blog-header"
          class="inline-flex items-center space-x-2 bg-blue-500/10 border border-blue-500/20 rounded-full px-6 py-3 mb-8"
        >
          <Bookmark size={16} class="text-blue-400" />
          <span class="text-blue-300 text-sm font-medium">Latest Insights</span>
        </div>
  
        <div
          id="blog-title"
          class="text-4xl md:text-6xl font-bold text-white mb-6"
        >
          Blog &
          <br />
          <span class="bg-gradient-to-r from-blue-400 to-purple-600 bg-clip-text text-transparent">
            Updates
          </span>
        </div>
  
        <p
          id="blog-intro"
          class="text-xl text-slate-300 max-w-3xl mx-auto mb-8"
        >
          Aktuelle Entwicklungen, Forschungsergebnisse und Einblicke in die Welt der digitalen Geisteswissenschaften.
        </p>
  
        <div
          id="blog-filter"
          class="flex flex-wrap items-center justify-center gap-3 mb-12"
        >
          {categories.map((category) => (
            <button
              data-filter={category.name} class:list={[
                "px-4 py-2 rounded-full text-sm font-medium transition-all duration-300",
                category.active
                  ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white'
                  : 'bg-slate-800/50 text-slate-300 hover:bg-slate-700/50 hover:text-white'
              ]}
            >
              {category.name} ({category.count})
            </button>
          ))}
        </div>
      </div>

      <div id="blog-grid" class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12">

        <article class="lg:col-span-2 lg:row-span-1 grid-item group" data-category={mainPost.category}>
          <div class="bg-slate-800/50 backdrop-blur-sm border border-slate-700/50 rounded-2xl overflow-hidden hover:border-blue-500/30 transition-all duration-300 h-full flex flex-col">
            <div class="relative h-64 lg:h-80">
              <Image
                src={TEMPTODO}
                alt={mainPost.title}
                class="w-full h-full object-cover"
              />
              <div class="absolute top-4 left-4">
                <span class="px-3 py-1 bg-blue-500 text-white text-xs font-medium rounded-full">
                  Featured
                </span>
              </div>
            </div>
  
            <div class="p-8 flex flex-col justify-center flex-grow">
              <div class="mb-4">
                <span class="text-blue-400 text-sm font-medium">{mainPost.category}</span>
                <div class="flex items-center space-x-4 mt-2 text-slate-400 text-sm">
                  <div class="flex items-center space-x-1">
                    <Calendar size={14} />
                    <span>{formatDate(mainPost.date)}</span>
                  </div>
                  <div class="flex items-center space-x-1">
                    <Clock size={14} />
                    <span>{mainPost.readTime} read</span>
                  </div>
                </div>
              </div>
  
              <h3 class="text-2xl font-bold text-white mb-4 group-hover:text-blue-400 transition-colors">
                {mainPost.title}
              </h3>
  
              <p class="text-slate-300 leading-relaxed mb-6">
                {mainPost.excerpt}
              </p>
  
              <a href="#" class="self-start flex items-center space-x-2 text-blue-400 hover:text-blue-300 transition-colors group/link">
                <span class="font-medium">Weiterlesen</span>
                <ArrowRight size={16} class="transition-transform duration-300 group-hover/link:translate-x-1" />
              </a>
            </div>
          </div>
        </article>
  
        {otherPosts.map((post) => (
          <article class="lg:col-span-1 grid-item group" data-category={post.category}>
            <div class="bg-slate-800/50 backdrop-blur-sm border border-slate-700/50 rounded-2xl overflow-hidden hover:border-purple-500/30 transition-all duration-300 h-full flex flex-col">
              <div class="relative h-48">
                <Image
                  src={TEMPTODO}
                  alt={post.title}
                  class="w-full h-full object-cover"
                />
              </div>
  
              <div class="p-6 flex flex-col flex-grow">
                <div class="mb-3">
                  <span class="text-purple-400 text-sm font-medium">{post.category}</span>
                  <div class="flex items-center space-x-3 mt-1 text-slate-400 text-xs">
                    <div class="flex items-center space-x-1">
                      <Calendar size={12} />
                      <span>{formatDate(post.date)}</span>
                    </div>
                    <div class="flex items-center space-x-1">
                      <Clock size={12} />
                      <span>{post.readTime}</span>
                    </div>
                  </div>
                </div>
  
                <h3 class="text-lg font-bold text-white mb-3 group-hover:text-purple-400 transition-colors leading-tight">
                  {post.title}
                </h3>
  
                <p class="text-slate-300 text-sm leading-relaxed mb-4 flex-grow">
                  {post.excerpt}
                </p>
  
                <a href="#" class="self-start flex items-center space-x-2 text-purple-400 hover:text-purple-300 transition-colors text-sm group/link">
                  <span class="font-medium">Lesen</span>
                  <ArrowRight size={14} class="transition-transform duration-300 group-hover/link:translate-x-1" />
                </a>
              </div>
            </div>
          </article>
        ))}
  
      </div>
      </div>
  </div>
</section>

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  // Warten, bis die Seite geladen ist (Astro-spezifisch)
  document.addEventListener('astro:page-load', () => {
    gsap.registerPlugin(ScrollTrigger);

    // Header-Animationen
    gsap.fromTo("#blog-header", { opacity: 0, y: 20 }, { opacity: 1, y: 0, duration: 0.8 });
    gsap.fromTo("#blog-title", { opacity: 0, y: 20 }, { opacity: 1, y: 0, duration: 0.8, delay: 0.2 });
    gsap.fromTo("#blog-intro", { opacity: 0, y: 20 }, { opacity: 1, y: 0, duration: 0.8, delay: 0.4 });
    gsap.fromTo("#blog-filter", { opacity: 0, y: 20 }, { opacity: 1, y: 0, duration: 0.8, delay: 0.6 });

    // Grid-Items-Animation (mit ScrollTrigger)
    const gridItems = gsap.utils.toArray<HTMLElement>('.grid-item');
    // Die initialen Grid-Item-Animationen wurden oben beibehalten.
    // Wir stellen jedoch sicher, dass die Artikel initial sichtbar sind, 
    // bevor die Filterlogik greift, um den Fehler zu beheben.
    gsap.fromTo(gridItems, 
      { opacity: 0, y: 20 }, 
      { 
        opacity: 1, 
        y: 0, 
        duration: 0.8, 
        delay: 0.8, 
        stagger: 0.1, 
        scrollTrigger: { 
          trigger: "#blog-grid", 
          start: 'top 80%' 
        }
      }
    );

    // Einfache GSAP-Hover-Animation für die "Weiterlesen"-Links
    const links = gsap.utils.toArray<HTMLElement>('.group\\/link');
    links.forEach(link => {
      const arrow = link.querySelector('svg');
      if (!arrow) return;

      const tl = gsap.timeline({ paused: true });
      tl.to(arrow, { x: 5, duration: 0.3, ease: 'power2.inOut' });

      link.addEventListener('mouseenter', () => tl.play());
      link.addEventListener('mouseleave', () => tl.reverse());
    });

    // --- GEFIXTE FILTER-LOGIK ---

    const filterButtons = document.querySelectorAll<HTMLButtonElement>('#blog-filter button');
    const blogArticles = document.querySelectorAll<HTMLElement>('#blog-grid .grid-item');
    
    // Definiere die Klassen für einfacheren Wechsel
    const activeClasses = ['bg-gradient-to-r', 'from-blue-500', 'to-purple-600', 'text-white'];
    const inactiveClasses = ['bg-slate-800/50', 'text-slate-300', 'hover:bg-slate-700/50', 'hover:text-white'];

    // 1. Funktion zum Anwenden des Filters
    const applyFilter = (selectedFilter: string) => {
      let activeBtn: HTMLButtonElement | null = null;
      
      // Update Button Styles
      filterButtons.forEach(btn => {
        const filterName = btn.dataset.filter;
        
        btn.classList.remove(...activeClasses, ...inactiveClasses);

        if (filterName === selectedFilter) {
          btn.classList.add(...activeClasses);
          activeBtn = btn;
        } else {
          btn.classList.add(...inactiveClasses);
        }
      });

      const visibleArticles: HTMLElement[] = [];
      
      // Filter Articles
      blogArticles.forEach(article => {
        const articleCategory = article.dataset.category;
        const isVisible = selectedFilter === 'Alle' || selectedFilter === articleCategory;

        if (isVisible) {
          visibleArticles.push(article);
          article.style.display = ''; 
        } else {
          article.style.display = 'none';
        }
      });
      
      // Animation (optional)
      gsap.fromTo(visibleArticles, 
        { opacity: 0, y: 10 }, 
        { opacity: 1, y: 0, duration: 0.5, stagger: 0.05 }
      );
    };

    // 2. Event Listener für Buttons hinzufügen
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const selectedFilter = button.dataset.filter;
        if (selectedFilter) {
            applyFilter(selectedFilter);
        }
      });
    });

    // 3. ✨ FIX: Standard-Filter "Alle" sofort anwenden beim Laden der Seite
    // Dadurch werden alle Blogartikel beim initialen Seitenaufruf angezeigt.
    applyFilter('Alle'); 

  });
</script>