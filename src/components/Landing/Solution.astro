---
import { Icon } from 'astro-icon/components';
---
<section class="fullscreen-section min-h-screen" id="solution-section">
  <div class="content-container h-full flex items-center flex-col justify-start px-4 max-w-6xl pt-24 md:pt-28">
    <div id="hero-headline" class="text-2xl md:text-3xl text-white mb-0 md:mb-6 leading-tight text-center bg-gray-800/30 w-full px-4 md:px-16 py-3 md:py-10 rounded-2xl border-2 border-gray-700">
      <div id="sparkles-badge" class="h-12 w-12 md:w-24 md:h-24 mx-auto mb-3 md:mb-8 rounded-full bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 flex items-center justify-center">
        <Icon name="lucide:sparkles" size={36} class="text-white scale-50 md:scale-100" />
      </div>
        Ein einheitlicher Hermeneutischer Zirkel
        <br />
        <span class="text-gray-300 bg-clip-text text-sm md:text-base font-normal line-height-small mt-2">
          6 integrierte Schritte führen von der Quellendigitalisierung bis zur wissenschaftlichen Nachnutzung – ohne Medienbrüche, vollständig dokumentiert und reproduzierbar.
        </span>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-2 md:gap-8 mt-4 w-full">


      <div class="feature-card border-2 border-gray-700 bg-gray-800/20 w-full rounded-xl p-3 md:p-6 flex flex-col">
        <div class="flex flex-row items-center space-x-4 mb-4 md:mb-6">
          <div class="bg-green-400/20 p-1 md:p-2 rounded-lg">
            <Icon name="lucide:target" size={24} class="text-green-400 scale-70 md:scale-100" />
          </div>
          <div id="problem-headline" class="text-lg">
             <span class="text-white font-bold text-lg md:text-xl">Geschlossener Datenzyklus</span>
           </div>
        </div>
        <div class="-mt-2">
          <span class="text-gray-300 text-xs md:text-sm line-height-extra-small">Nahtlose Integration aller Forschungsschritte von der Digitalisierung bis zur Nachnutzung</span>
        </div>
      </div>


      <div class="feature-card border-2 border-gray-700 bg-gray-800/20 w-full rounded-xl p-3 md:p-6 flex flex-col">
        <div class="flex flex-row items-center space-x-4 mb-4 md:mb-6">
          <div class="bg-green-400/20 p-1 md:p-2 rounded-lg">
            <Icon name="lucide:brain" size={24} class="text-green-400 scale-70 md:scale-100" />
          </div>
          <div id="problem-headline" class="text-lg">
            <span class="text-white font-bold text-lg md:text-xl">KI-unterstützte Prozesse</span>
           </div>
        </div>
        <div class="-mt-2">
          <span class="text-gray-300 text-xs md:text-sm line-height-extra-small">Large Language Models optimieren Annotation, Extraktion und Qualitätskontrolle</span>
        </div>
      </div>


      <div class="feature-card border-2 border-gray-700 bg-gray-800/20 w-full rounded-xl p-3 md:p-6 flex flex-col">
        <div class="flex flex-row items-center space-x-4 mb-4 md:mb-6">
          <div class="bg-green-400/20 p-1 md:p-2 rounded-lg">
            <Icon name="lucide:circle-check-big" size={24} class="text-green-400 scale-70 md:scale-100" />
          </div>
          <div id="problem-headline" class="text-lg">
            <span class="text-white font-bold text-lg md:text-xl">FAIR-Prinzipien</span>
           </div>
        </div>
        <div class="-mt-2">
          <span class="text-gray-300 text-xs md:text-sm line-height-extra-small">Findable, Accessible, Interoperable und Reusable - für maximale Nachnutzbarkeit</span>
        </div>
      </div>


      <div class="feature-card border-2 border-gray-700 bg-gray-800/20 w-full rounded-xl p-3 md:p-6 flex flex-col">
        <div class="flex flex-row items-center space-x-4 mb-4 md:mb-6">
          <div class="bg-green-400/20 p-1 md:p-2 rounded-lg">
            <Icon name="lucide:message-square" size={24} class="text-green-400 scale-70 md:scale-100" />
          </div>
          <div id="problem-headline" class="text-lg">
            <span class="text-white font-bold text-lg md:text-xl">Interaktive Workflows</span>
           </div>
        </div>
        <div class="-mt-2">
          <span class="text-gray-300 text-xs md:text-sm line-height-extra-small">Benutzerfreundliche Tools für komplexe geisteswissenschaftliche Forschungsprozesse</span>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  
  // Dein GSAP-Code ist bereits perfekt und benötigt keine Änderungen.
  // Er animiert das Badge unabhängig von der Bildschirmgröße.
  
  // Animate the sparkles badge
  gsap.set("#sparkles-badge", {
    transformOrigin: "center center"
  });
  
  // Combined rotation and scale animation
  gsap.to("#sparkles-badge", {
    rotation: 360,
    duration: 8,
    ease: "none",
    repeat: -1
  });
  
  gsap.to("#sparkles-badge", {
    scale: 1.1,
    duration: 2,
    ease: "power2.inOut",
    yoyo: true,
    repeat: -1
  });
</script>



<style>
  /* Diese Styles sind in Ordnung */
  .line-height-small {
     display: inline-block;
    line-height: 1.4rem; /* Match the height for vertical centering */
  }
  .line-height-extra-small {
     display: inline-block;
    line-height: 1.2rem; /* Match the height for vertical centering */
  }
  #hero-headline {
    font-family: 'Inter', sans-serif;
    font-weight: 900; /* Extra bold */
  }
  #problem-headline {
    font-family: 'Inter', sans-serif;
    font-weight: 800; /* Bold */
  }

  /* DEIN CSS WAR FEHLERHAFT:
    1. '.hero-badge' wurde doppelt definiert.
    2. Die Klasse '.hero-badge' wurde im HTML nirgends verwendet.
    3. Die Keyframes 'sparkle-float' und 'sparkle-rotate' waren 
       überflüssig, da GSAP die Animation bereits im <script> durchführt.

    KORREKTUR:
    Ich habe die Styles repariert und auf die neue Klasse '.feature-card' 
    angewendet, die ich den vier Kacheln oben im HTML gegeben habe.
    Jetzt hast du einen schönen Hover-Effekt mit Farbverlauf!
  */

  .feature-card {
    position: relative;
    transform-origin: center;
    transition: transform 0.3s ease, border-color 0.3s ease;
    /* Setzt die Tailwind-Randfarbe explizit für die Transition */
    border-color: rgb(55 65 81); 
  }

  .feature-card::before {
    content: '';
    position: absolute;
    /* -2px, um den 2px-Rand (border-2) zu überlappen */
    top: -2px; 
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #f59e0b, #06b6d4);
    background-size: 300% 300%;
    /* Erbt die 'rounded-xl' Abrundung von der .feature-card */
    border-radius: inherit; 
    z-index: -1;
    opacity: 0;
    transition: opacity 0.5s ease;
    /* Diese Animation wird für den :before-Gradienten benötigt */
    animation: gradient-shift 3s ease infinite;
  }

  .feature-card:hover {
    transform: scale(1.02);
    /* Macht den ursprünglichen grauen Rand durchsichtig */
    border-color: transparent; 
  }

  .feature-card:hover::before {
    /* Zeigt den animierten Gradienten-Rand */
    opacity: 0.9; 
  }

  /* Diese Animation wird vom ::before-Element oben verwendet */
  @keyframes gradient-shift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
</style>