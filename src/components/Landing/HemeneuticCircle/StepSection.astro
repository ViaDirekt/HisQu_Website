---
// src/components/Steps/StepSection.astro
import type { Step } from "../types";
import { Icon } from "astro-icon/components";

export interface Props {
  step: Step;
  /** optional: 1-basierter Index (1,2,3,...) – fällt auf numerische step.id zurück */
  index?: number;
}

const { step, index } = Astro.props;

// Parität robust bestimmen:
// 1) Wenn index übergeben, nutze den (1-basiert).
// 2) Sonst: wenn step.id numerisch ist, nutze sie.
// 3) Fallback: 1 (ungerade), damit Default gleich bleibt (Bild rechts).
const numericId = Number(step.id);
const basis = typeof index === "number" ? index : (Number.isFinite(numericId) ? numericId : 1);
const isEven = basis % 2 === 0;
---

<section class="fullscreen-section" id={`step-${step.id}`}>
  <div class="content-container h-full flex items-center justify-center px-6">
    <div class="max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-center">
      
      <div class={`space-y-8 ${isEven ? "lg:order-2" : "lg:order-1"}`}>
        <div>
          <div class={`inline-flex justify-center items-center space-x-3 bg-gradient-to-r ${step.color} bg-opacity-10 border border-white/10 rounded-full px-2 md:px-6 py-1 md:py-3 mb-6`}>
            <div class={`text-white bg-gradient-to-r ${step.color} bg-clip-text`}>
              <Icon name={step.icon} size={22} />
            </div>
            <span class={`text-white w-full text-center bg-gradient-to-r ${step.color} bg-clip-text font-medium`}>
              {step.subtitle}
            </span>
          </div>

          <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-6">
            {step.title}
          </h2>

          <p class="text-lg lg:text-xl text-slate-300 leading-relaxed">
            {step.description}
          </p>
        </div>

        <div class="hidden lg:block space-y-4">
          <h3 class="text-xl font-bold text-white mb-4">Kernfunktionen</h3>
          <div class="space-y-3">
            {step.details.map((detail) => (
              <div class="flex items-center space-x-3">
                <div class={`w-2 h-2 rounded-full bg-gradient-to-r ${step.color}`} />
                <span class="text-slate-300">{detail}</span>
              </div>
            ))}
          </div>
        </div>

        <div class="hidden lg:block space-y-4">
          <h3 class="text-xl font-bold text-white mb-4">Verwendete Tools</h3>
          <div class="flex flex-wrap gap-3">
            {step.tools.map((tool) => (
              <span class={`px-4 py-2 bg-gradient-to-r ${step.color} bg-opacity-10 border border-white/10 rounded-full text-sm font-medium text-white`}>
                {tool}
              </span>
            ))}
          </div>
        </div>
      </div>

      <div class={`relative ${isEven ? "lg:order-1" : "lg:order-2"}`}>
        <div class="relative">
          <div class={`absolute inset-0 bg-gradient-to-r ${step.color} md:opacity-20 blur-3xl rounded-3xl opacity-0`} />

          <div class="relative bg-slate-800/50 backdrop-blur-sm border border-slate-700/50 rounded-3xl p-8 h-80 lg:h-96 flex items-center justify-center">
            <div class="text-center">
              <div class={`w-28 h-28 lg:w-32 lg:h-32 mx-auto mb-6 rounded-full bg-gradient-to-r ${step.color} flex items-center justify-center`}>
                <div class="text-white">
                  <Icon name={step.icon} size={40} />
                </div>
              </div>
              <h3 class="text-xl lg:text-2xl font-bold text-white mb-2">{step.title}</h3>
              <p class="text-slate-300">{step.subtitle}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>